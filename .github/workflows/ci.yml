name: ci
on:
  workflow_dispatch:
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
        
    - name: Restore dependencies
      working-directory: ./dotnet8/helloDocker8/
      run: |
          ls -la
          dotnet restore
    - name: Build
      working-directory: ./dotnet8/helloDocker8/
      run: dotnet build --no-restore
  docker:
    name:  Docker Build & Push
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.0.x'
    - name: Docker Login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
    - name: Build Image
      working-directory: ./dotnet8/helloDocker8/
      run: |
        dotnet publish -c Release -p:ContainerImageName=${{ secrets.DOCKER_USERNAME }}/hellodockerfromdotnet8
    - name: Push Image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/hellodockerfromdotnet8 .
        docker images
        docker push ${{ secrets.DOCKER_USERNAME }}/hellodockerfromdotnet8 --all-tags
